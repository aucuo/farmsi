/* stylelint-disable */
/* stylelint-enable */
:root {
  --primary-color: #00c293;
  --primary-hover-color: #00b88b;
  --secondary-color: #78808f;
  --red-color: #eb1c4e;
  --icon-default: #abb6cc;
  --border-color: #f2f2f5;
  --bg-light: #f7f7fa;
  --text-dark: #444952;
  --default-radius: 24px;
  --box-shadow: 0px 12px 28px rgba(0, 0, 0, 0.06);
  --safe-area-bottom-height: 0;
  --site-fixed-tab-bar-height: 0;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  gap: 20px;
}
.pagination__pages {
  display: flex;
}
.pagination__pages-item {
  display: flex;
  justify-content: center;
  align-items: center;
}
.pagination__pages-item button {
  width: 40px;
  height: 40px;
  border-radius: 40px;
  border: none;
  background-color: unset;
  color: var(--secondary-color);
  font-size: 18px;
  font-weight: 500;
  line-height: 24px;
}
.pagination__pages-item button:hover {
  background-color: var(--bg-light);
}
.pagination__pages-item:not(:last-child) {
  margin-right: 4px;
}
.pagination__pages-item--active button {
  color: var(--text-dark);
  background-color: var(--bg-light);
  border-radius: 99px;
}
.pagination__navigation {
  width: 40px;
  height: 40px;
  border-radius: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 300ms;
  z-index: 2;
}
.pagination__navigation:not(.pagination__navigation--disabled):hover {
  background-color: var(--bg-light);
  cursor: pointer;
}
.pagination__navigation-icon {
  width: 20px;
  height: 20px;
  fill: none;
  stroke: var(--icon-default);
  stroke-width: 2px;
  transition: all 300ms;
}
.pagination__navigation--disabled {
  opacity: 0.5;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
