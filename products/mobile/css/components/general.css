@charset "UTF-8";
body {
  font-family: "Roboto Flex", sans-serif !important;
}

ul,
ol,
li {
  list-style: none;
  margin: 0;
  padding: 0;
}

.ordered-list {
  list-style-type: decimal;
  padding: 0;
}
.ordered-list li {
  list-style-type: decimal;
  margin-left: 20px;
  color: var(--text-dark);
}

.unordered-list {
  font-size: 12px;
  padding: 0;
  margin-left: 6px;
  list-style: none;
}
.unordered-list li {
  position: relative;
  color: var(--secondary-color);
  padding-left: 14px;
  margin-left: 0;
  line-height: 22px;
}
.unordered-list li::before {
  content: "â€¢";
  color: var(--secondary-color);
  position: absolute;
  left: 0;
}
.unordered-list li:not(:last-child) {
  margin-bottom: 4px;
}

a {
  color: #000;
  text-decoration: none;
}

.container {
  padding: 0 16px;
}

.container-fluid {
  padding: 0;
}

.title {
  margin: 0;
  font-weight: 700;
  font-size: 22px;
  line-height: 28px;
  letter-spacing: -0.02em;
}
.title:not(:last-child) {
  margin-bottom: 12px;
}

.subtitle {
  margin: 0;
  font-weight: 700;
  font-size: 22px;
  line-height: 28px;
  letter-spacing: -0.02em;
}
.subtitle:not(:last-child) {
  margin-bottom: 26px;
}

button {
  border: none;
  background-color: unset;
}

.button {
  width: fit-content;
  padding: 12px 24px;
  background-color: var(--bg-light);
  font-size: 16px;
  line-height: 20px;
  font-weight: 600;
  border-radius: 99px;
}
.button:active {
  background-color: var(--border-color);
}
.button-primary {
  color: #fff;
  background-color: var(--primary-color);
}
.button-primary:active {
  background-color: var(--primary-hover-color);
}

.button-primary {
  border-radius: 99px;
  font-size: 14px;
  line-height: 22px;
  padding: 6px 12px;
  background-color: var(--primary-color);
  color: #fff;
  font-weight: 600;
}

.button--flat--left {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}

@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type=checkbox],
  input[type=radio] {
    --active: var(--primary-color);
    --active-inner: #fff;
    --focus: 2px rgba(0, 194, 147, .3);
    --border: #fff;
    --border-hover: unset;
    --background: #ABB6CC;
    --disabled: #F6F8FF;
    --disabled-inner: #E1E6F9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  input[type=checkbox]:after,
  input[type=radio]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
  }
  input[type=checkbox]:checked,
  input[type=radio]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }
  input[type=checkbox]:disabled,
  input[type=radio]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  input[type=checkbox]:disabled:checked,
  input[type=radio]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  input[type=checkbox]:disabled + label,
  input[type=radio]:disabled + label {
    cursor: not-allowed;
  }
  input[type=checkbox]:hover:not(:checked):not(:disabled),
  input[type=radio]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  input[type=checkbox]:focus,
  input[type=radio]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  input[type=checkbox]:not(.switch),
  input[type=radio]:not(.switch) {
    width: 21px;
  }
  input[type=checkbox]:not(.switch):after,
  input[type=radio]:not(.switch):after {
    opacity: var(--o, 0);
  }
  input[type=checkbox]:not(.switch):checked,
  input[type=radio]:not(.switch):checked {
    --o: 1;
  }
  input[type=checkbox] + label,
  input[type=radio] + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
  }
  input[type=checkbox]:not(.switch) {
    border-radius: 7px;
  }
  input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
  }
  input[type=checkbox].switch {
    width: 27px;
    height: 16px;
    border-radius: 11px;
  }
  input[type=checkbox].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 12px;
    height: 12px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
  }
  input[type=checkbox].switch:checked {
    --ab: var(--active-inner);
    --x: 11px;
  }
  input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
  }
  input[type=radio] {
    border-radius: 50%;
  }
  input[type=radio]:after {
    width: 19px;
    height: 19px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, 0.7));
  }
  input[type=radio]:checked {
    --s: .5;
  }
}
.switcher {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #00C293;
  border-radius: 99px;
  padding: 6px 8px 7px 14px;
  background-color: #EBFAF6;
}
.switcher label {
  font-size: 14px;
  font-weight: 600;
  line-height: 22px;
  margin-right: 9px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
